TITLE:: MelodyAlgorithm
summary:: Create melodies for basslines and other parts.
categories:: Live Coding
related:: Classes/Algorithms/RandomAlgorithm, Classes/Algorithms/RhythmAlgorithm

DESCRIPTION::
MelodyAlgorithm can be used to generate melodies matched to rhythms and chord sequences.


CLASSMETHODS::

METHOD:: tonic
Simply repeats the tonic note of each chord.

ARGUMENT:: length
The length, in beats, of the rhythm to generate.

ARGUMENT:: noteLength
The length of the notes in the rhythm. Must be a 1/8 or a multiple thereof, or 1/6 or 1/3.

ARGUMENT:: amp
The amplitude to use for the notes. This can be either a single number, or an array of numbers. If it is an array, the array is cycled through repeatedly, each current value in the array being used as the amplitude of the current note in the rhythm.

The single value, or each value in the array, must be greater than or equal to 0 and less than or equal to 1.

ARGUMENT:: legato
The legato to use for the notes. This can be either a single number, or an array of numbers. If it is an array, the array is cycled through repeatedly, each current value in the array being used as the legato of the current note in the rhythm.

The single value, or each value in the array, must be greater than 0.

ARGUMENT:: anticipation
Whether to include an 'anticipation note' before the current note. An anticipation note appears a sixteenth note before the current note.
This argument can take a number of forms:
table::
## Value || Notes
## code::nil:: || Don't create any anticipation notes
## 0 || Don't create any anticipation notes
## A single number > 0 || Create an anticipation note for every note in the rhythm, with an amp value of the specified amount
## An array of numbers || The array is cycled through repeatedly, each current value in the array being used as the amp value for a anticipation note for the current note in the rhythm. If the array value is 0 or nil, no anticipation note is created for the current note.
::

returns:: An code::Event:: with the keys code::\dur::, code::\legato:: and code::\amp::. Each key contains an array of values to be fed into a pattern. See the code example below for more details.


INSTANCEMETHODS::


EXAMPLES::

code::
~rhythm = RhythmAlgorithm.uniformRhythm(8);
~degrees = {7.rand2}!~rhythm.dur.size;
Pdef(\pattern,
	Pbind(
		\degree,Pseq(~degrees,inf),
		\dur, Pseq(~rhythm.dur,inf),
		\legato, Pseq(~rhythm.legato,inf),
		\amp, Pseq(~rhythm.amp,inf)
	)
).play;
::