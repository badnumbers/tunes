TITLE:: RandomAlgorithm
summary:: Generate random sequences suitable for acid
categories:: Live Coding

DESCRIPTION::
RandomAlgorithm can be used to generate random sequences useful as rhythms, melodies and controller patterns in acid.


CLASSMETHODS::


INSTANCEMETHODS::

METHOD:: generateRhythm
Generates a sequence of values chosen from a list according to some weightings, but will stop when the sum of the values reaches a specified amount. Useful for generating rhythmical values that add up to a specified number of beats.

ARGUMENT:: length
The desired sum of the generated sequence; in rhythmical terms the duration of the rhythum in beats.

ARGUMENT:: durations
The list of allowed rhythm values in beats. For example, specify [0.5,0.25] for a rhythm comprised of half notes and quarter notes.

ARGUMENT:: weights
The weightings to be applied when choosing the durations from the list. The number of weightings should equal the number of values in the durations list. The weightings do not need to add up to 1.

returns:: An array containing the generated rhythm values.

METHOD:: generateSequenceFromRange
Generates a sequence of values chosen at random between a minimum and maximum value.

ARGUMENT:: length
The number of values to generate.

ARGUMENT:: lo
The minimum value in the range.

ARGUMENT:: hi
The maximum value in the range.

returns:: An array containing the generated values.

METHOD:: generateSequenceFromList
Generates a sequence of values chosen from a list according to some weightings.

ARGUMENT:: length
The number of values to generate.

ARGUMENT:: values
The list of values from which to choose.

ARGUMENT:: weights
The weightings to be applied when choosing the values from the list. The number of weightings should equal the number of values. The weightings do not need to add up to 1.

returns:: An array containing the generated values.

EXAMPLES::

code::
(
var algo = RandomAlgorithm();

// Use as the \dur key in a pattern
~rhythm = algo.generateRhythm(8,[0.25,0.5],[7,1]);

// Use as the \degree key in a pattern
~degrees = algo.generateSequenceFromRange(~rhythm.size,7,-7);

// Use as the \legato value in a pattern. The value larger than 1 will glue notes together, resulting in a slide on acid-style synths
~legato = algo.generateSequenceFromList(~rhythm.size, [0.2,0.5,1.1], [5,3,2]);

// Use as a sequence of values for controlling cutoff via MIDI CC
~cutofflevels = algo.generateSequenceFromRange(~rhythm.size,0,127);
)
::