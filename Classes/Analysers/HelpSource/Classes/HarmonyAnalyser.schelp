TITLE:: HarmonyAnalyser
summary:: Analyses a melody and returns a set of chords which work with it
categories:: Live Coding

DESCRIPTION::
HarmonyAnalyser accepts an array of scale degrees and an array of durations and uses a simple mathematical approach to return a set of chords, one per 4 beats, which fit them best.

CLASSMETHODS::

METHOD:: findChordsInMelody
Accepts a melody and figures out a chord or chords that work with each 4-bar chunk of the melody. Returns an array of arrays. The outer array is for each 4-beat section of the melody, and each inner array is one or more chords that fit that 4-beat section best. Each chord in the inner array is represented as an Event with the keys code::tonic:: (the zero-based number meaning the which degree of the scale is the chord tonic) and code::triad:: (an array of three zero-based numbers meaning the degrees of the scale that are in the chord).

ARGUMENT:: durs
The rhythm of the melody, defined as an array of durations.

ARGUMENT:: degrees
The scale degrees of the melody, defined as an array of degrees.

returns::
An array containing, for each 4-bar chunk of the melody, an array of possible chords defined as code::Events::. Each chord has a code::tonic:: and a code::triad::, for example:
code::
[
	[
		// First 4-bar chunk, two possible chords
		( 'triad': [ 1, 3, 5 ], 'tonic': 1 ),
		( 'triad': [ 3, 5, 0 ], 'tonic': 3 )
	],
	// Second 4-bar chunk, one possible chord
	[
		( 'triad': [ 2, 4, 6 ], 'tonic': 2 )
	]
]
::

EXAMPLES::

code::
(some example code)
::