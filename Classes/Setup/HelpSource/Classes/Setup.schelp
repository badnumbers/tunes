TITLE:: Setup
SUMMARY:: Utility methods for setting SuperCollider up.
CATEGORIES:: Core

DESCRIPTION::
A set of utility methods for setting SuperCollider up.

CLASSMETHODS::

METHOD:: midi
The first time this is called, it runs LINK::Classes/MIDIClient#*init:: and returns a LINK::Classes/MIDIOut:: corresponding to the device name and port name returned by LINK::Classes/Config#*midi::.

For subsequent calls the CODE::MidiOut:: created the first time is returned.

NOTE::
If LINK::Classes/Config#*midi:: does not return MIDI configuration, because the STRONG::Configuration File:: is missing or does not contain a valid STRONG::MIDI:: section, then this method will throw an error.
::

RETURNS::
A LINK::Classes/MIDIOut:: created using LINK::Classes/Config#*midi::.

METHOD:: server
If CODE::Server.default:: is already a running server, frees all nodes. If CODE::Server.default:: is not a running server, it boots it with the number of input and output bus channels as specified in LINK::Classes/Config#*server::.

NOTE::
If the STRONG::Configuration File:: is missing or does not contain a valid STRONG::Server:: section, then the CODE::Server:: will be booted with the default of 2 input and output bus channels.
::

ARGUMENT:: condition
An instance of CODE::Condition:: used to synchronise the server boot with other activity. If CODE::nil:: is provided then no synchronisation will occur.